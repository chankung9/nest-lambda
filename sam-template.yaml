AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Express Application/API powered by API Gateway and Lambda
Parameters:
  DomainName:
    Type: String
    Description: API Domain name
    Default: ''
  Stage:
    Type: String
    Description: App Stage
    Default: ''
  Name:
    Type: String
    Description: App Name
    Default: ''
  Version:
    Type: String
    Description: App Version
    Default: ''
  Description:
    Type: String
    Description: App Description
    Default: ''

Conditions:
  UseDomainName:
    !Not
      - !Equals
        - !Ref DomainName
        - ''
  UseSwagger:
    !Not
      - !Equals
        - !Ref Stage
        - 'prod'

Resources:
  ExpressApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./simple-proxy-api.yaml
      StageName: live

  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./layer
      CompatibleRuntimes:
        - nodejs12.x
      RetentionPolicy: Delete

  ExpressLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist
      Handler: lambda-main.handler
      MemorySize: 128
      Runtime: nodejs12.x
      Timeout: 30
      AutoPublishAlias: live
      Layers:
        - !Ref DependenciesLayer
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ExpressApi
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ExpressApi
            Path: /{proxy+}
            Method: ANY

  ExpressLambdaFunctionSwagger:
    Type: AWS::Serverless::Function
    Condition: UseSwagger
    Properties:
      CodeUri: ./dist
      Handler: lambda-swagger.handler
      MemorySize: 128
      Runtime: nodejs12.x
      Timeout: 30
      AutoPublishAlias: live
      VersionDescription: !Ref Version
      Layers:
        - !Ref DependenciesLayer
      Environment:
        Variables:
          APP_TITLE: !Ref Name
          APP_VERSION: !Ref Version
          APP_DESCRIPTION: !Ref Description
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ExpressApi
            Path: /swagger
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ExpressApi
            Path: /swagger/{proxy+}
            Method: ANY

  MyApiCertificate:
    Type: 'AWS::CertificateManager::Certificate'
    Condition: UseDomainName
    Properties:
      DomainName: !Sub '*.${DomainName}'
      DomainValidationOptions:
        - DomainName: !Sub '*.${DomainName}'
          ValidationDomain: !Ref DomainName
      SubjectAlternativeNames:
        - !Ref DomainName
  
  MyApiDomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Condition: UseDomainName
    Properties:
      CertificateArn: !Ref MyApiCertificate
      DomainName: !Ref DomainName
  
  MyApiBasePathMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    Condition: UseDomainName
    Properties:
      RestApiId: !Ref ExpressApi
      DomainName: !Ref MyApiDomainName
      BasePath: '(none)'
      Stage: prod
  
  Route53HostedZone:
    Type: AWS::Route53::HostedZone
    Condition: UseDomainName
    Properties:
      Name: !Ref DomainName
  
  MyApiRoute53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Condition: UseDomainName
    Properties:
      HostedZoneId: !Ref Route53HostedZone
      RecordSets:
        - Name: !Sub ${DomainName}.
          Type: A
          AliasTarget:
            EvaluateTargetHealth: false
            HostedZoneId: !GetAtt MyApiDomainName.DistributionHostedZoneId
            DNSName: !GetAtt MyApiDomainName.DistributionDomainName

Outputs:
  LambdaFunctionConsoleUrl:
    Description: Console URL for the Lambda Function.
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${ExpressLambdaFunction}

  ApiGatewayApiConsoleUrl:
    Description: Console URL for the API Gateway API's Stage.
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/apis/${ExpressApi}/resources

  ApiUrl:
    Description: Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Sub https://${ExpressApi}.execute-api.${AWS::Region}.amazonaws.com/version

  LambdaFunctionName:
    Description: Name of the Serverless Express Lambda Function
    Value: !Ref ExpressLambdaFunction